{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "USGS Mapping and Parameters Mapping",
	"Parameters":
	{
		"Environment":
		{
			"Description": "AWS VPC Environment Name",
			"Type": "String",
			"Default": "DEV",
			"AllowedValues": ["DEV", "PROD"]
		},
		"OperatingSystem":
		{
			"Description": "Operating System Desired",
			"Type": "String",
			"Default": "AmazonLinuxRedHat",
			"AllowedValues": ["AmazonLinuxRedHat", "RedHatEnterpriseLinuxRedHat", "UbuntuDebian"]
		}
	},
	"Mappings":
	{
		"Environment":
		{
			"DEV":
			{
				"securitygroups"  : ["sg-f228cd95","sg-d928cdbe"],
				"subnets"         : "subnet-1ab7c36d",
				"vpc"             : "vpc-a30949c6",
				"InstanceRole"    : "Ec2-Role",
				"ADUser"          : "igsowi-systemjoiner",
				"ADPass"          : "YCagLtVJY4G9sjQJfNqC",
				"ADPath"          : "\"CHS Programs\"/OWI/Servers/DEV",
				"SudoGroup"       : "IGSGOWIServerAdmins",
				"CWLogsConfigS3Path"      : "dev-owi-admin/cloudwatch_logs_generic.cfg",
				"owis3bucket"	  : "nwis-mapper"
			},
			"PROD":
			{
				"securitygroups"  : [""],
				"subnets"         : "",
				"vpc"             : "",
				"InstanceRole"    : "Ec2-Role",
				"ADUser"          : "igsowi-systemjoiner",
				"ADPass"          : "YCagLtVJY4G9sjQJfNqC",
				"ADPath"          : "\"CHS Programs\"/OWI/Servers/PROD",
				"SudoGroup"       : "IGSGOWIServerAdmins",
				"CWLogsConfigS3Path"      : "prod-owi-admin/cloudwatch_logs_generic.cfg",
				"owis3bucket"	  : "TBD"
			},
			"Tags":
			{
				"ApplicationName"			: "OWI",
				"Name"						: "OWI-Tester"
			}
		},
		"OS":
		{
			"AmazonLinuxRedHat":
			{
				"amiID"           : "ami-c229c0a2",
				"InstanceType"    : "t2.micro",
				"installer"		  : "yum install -y",
				"packages"		  : "awscli",
				"IEMDistro"       : "Red_Hat_Enterprise",
				"IEMClientName"   : "BESAgent-9.2.5.130-rhe5.x86_64.rpm",
				"FileInstaller"   : "rpm -i",
				"CentrifyInstaller": "centrify-suite-2015.1-rhel4-x86_64.tgz"
			},
			"RedHatEnterpriseLinuxRedHat":
			{
				"amiID"           : "ami-775e4f16",
				"InstanceType"    : "t2.micro",
				"installer"		  : "yum install -y",
				"packages"		  : "awscli",
				"IEMDistro"       : "Red_Hat_Enterprise",
				"IEMClientName"   : "BESAgent-9.2.5.130-rhe5.x86_64.rpm",
				"FileInstaller"   : "rpm -i",
				"CentrifyInstaller": "centrify-suite-2015.1-rhel4-x86_64.tgz"
			},
			"UbuntuDebian":
			{
				"amiID"           : "ami-9abea4fb",
				"InstanceType"    : "t2.micro",
				"installer"		  : "apt-get install -y",
				"packages"		  : "awscli",
				"IEMDistro"       : "Ubuntu",
				"IEMClientName"   : "BESAgent-9.2.5.130-ubuntu10.amd64.deb",
				"FileInstaller"   : "dpkg -i",
				"CentrifyInstaller": "centrify-suite-2015.1-deb6-x86_64.tgz"
			}

		}
	},
	"Conditions" : {
		"IsAmz" : { "Fn::Equals" : [
						{"Ref" : "OperatingSystem"},
						"AmazonLinuxRedHat"
						]
					}

		},
	"Resources":
	{
		"MyEC2":
		{
			"Type": "AWS::EC2::Instance",
			"Properties":
			{
				"ImageId": {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"amiID"]},
				"InstanceType": {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"InstanceType"]},
				"IamInstanceProfile" : {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"InstanceRole"]},
				"Monitoring": "true",
				"SourceDestCheck": "true",
				"NetworkInterfaces":
				[
					{
						"GroupSet": {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"securitygroups"]},
						"AssociatePublicIpAddress": "false",
						"DeviceIndex": "0",
						"DeleteOnTermination": "true",
						"SubnetId": {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"subnets"]}
					}
				],
				"BlockDeviceMappings":
				[
					{
						"DeviceName": "/dev/xvda",
						"Ebs": {"VolumeSize" : "8"}
					}
				],
				"Tags":
				[
					{
						"Key":"ApplicationName",
						"Value":{"Fn::FindInMap":["Environment", "Tags","ApplicationName"]}
					},
					{
						"Key":"Name",
						"Value":{"Fn::FindInMap":["Environment", "Tags","Name"]}
					}
				],
				"UserData":
				{
					"Fn::Base64":
					{
						"Fn::Join":
						[
							"",
							[
								"#!/bin/bash \n",

								"inst=\"IGS" , {"Fn::FindInMap":["Environment", "Tags","ApplicationName"]}, "\"`curl http://169.254.169.254/latest/meta-data/instance-id` \n",
								"ip=`curl http://169.254.169.254/latest/meta-data/local-ipv4` \n",

								"strHostName=${inst:0:14}\".usgs.chs.ead\" \n",
								"#Setting hostname \n",
								"echo HOSTNAME=$strHostName >> /etc/sysconfig/network \n",
								"hostname $strHostName \n",

								"#Centify needs to think this is RH \n",
								{"Fn::If": ["IsAmz", "touch /etc/redhat-release \n", {"Ref": "AWS::NoValue"}]},

								"#Do some work \n",
								"mkdir centrify \n",
								"cd centrify \n",
								"wget http://10.12.0.30/AnonWebShare/InstallFiles/Centrify/DC/" , {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"CentrifyInstaller"]} , " \n",

								"#untar/zip \n",
								"tar -zxvf ", {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"CentrifyInstaller"]} , " \n",

								"#Install \n",
								"./install.sh --express \n",

								"#Join AD \n",
								"adjoin -w usgs.chs.ead -u " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADUser"]} , " -p " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADPass"]}, " -c usgs.chs.ead/" , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADPath"]}, " --name $strHostName -f \n",

								"#Update DNS using a service account and overwrite any ghost entries \n",
								"addns --update -u " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADUser"]} , " -p " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADPass"]}, " --name $strHostName --domain usgs.chs.ead \n",

								"#Delete any existing DNS entries -- these may error out, but that's ok \n",
								"addns --delete \n",

								"#Update DNS again under the machine account \n",
								"addns --update --machine --name $strHostName --domain usgs.chs.ead \n",

								"#Configured sudoers \n",
								"echo \"\" >> /etc/sudoers \n",
								"echo \"#Delegated Administrators\" >> /etc/sudoers \n",
								"echo \"%" , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"SudoGroup"]}, "\" \"ALL=(ALL)\" \"NOPASSWD:\" \"ALL\" >> /etc/sudoers \n",

								{"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"installer"]}, " ", {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"packages"]}, " \n",

								"#install awslogs \n",
								"wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py \n",
								"chmod +x ./awslogs-agent-setup.py \n",
								"rm /etc/redhat-release \n",
								"./awslogs-agent-setup.py -n -r us-west-2 -c s3://" , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"CWLogsConfigS3Path"]}, " \n",

								"#add tags to root EBS Volume \n",

								"EC2_AVAIL_ZONE=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone` \n",
								"EC2_REGION=`echo \"${EC2_AVAIL_ZONE::-1}\"` \n",

								"aws ec2 create-tags --resources $(aws ec2 describe-instances --instance-ids $(curl -s http://169.254.169.254/latest/meta-data/instance-id) --region ${EC2_REGION} | grep -oP '(?<=\"VolumeId\": \")[^\"]+') --tags ",
								"Key=ApplicationName,Value=",{"Fn::FindInMap":["Environment", "Tags","ApplicationName"]},
								" Key=Name,Value=",{"Fn::FindInMap":["Environment", "Tags","Name"]},
								" --region ${EC2_REGION} \n",

								"#Install IEM Client \n",
								"mkdir /etc/opt/BESClient \n",
								"wget http://10.12.0.30/AnonWebShare/InstallFiles/IBM/IEM/v9.2.5.130/Client/Non_Windows/" , {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMDistro"]} , "/actionsite.afxm -P /etc/opt/BESClient/ \n",
								"wget http://10.12.0.30/AnonWebShare/InstallFiles/IBM/IEM/v9.2.5.130/Client/Non_Windows/" , {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMDistro"]} , "/besclient.config -P /etc/opt/BESClient/ \n",
								"wget http://10.12.0.30/AnonWebShare/InstallFiles/IBM/IEM/v9.2.5.130/Client/Non_Windows/" , {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMDistro"]} , "/", {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMClientName"]}, " -P /etc/opt/BESClient/ \n",
								{"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"FileInstaller"]} , " /etc/opt/BESClient/", {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMClientName"]}, " \n",
								"touch /var/opt/BESClient/USGS.txt \n",
								"touch /var/opt/BESClient/USGS_CHS.txt \n",
								"service besclient restart \n",
								
								
								"echo \"" , {s3bucket:\"{"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"owis3bucket"]}\" , "\" > /tmp/s3bucket.json"
								
							]
						]
					}
				}
			}
		}
	},
	"Outputs":
	{
		"MyInstanceId":
		{
			"Description": "Resource ID of the newly created EC2 instance",
			"Value": {"Ref": "MyEC2"}
		}
	}
}